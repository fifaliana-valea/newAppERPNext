@model MonProjetErpnext.Models.Suppliers.SupplierQuotation
@{
    ViewData["Title"] = "Détails du Devis";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    string supplierId = ViewBag.SupplierId;
}

<style>
    /* Couleurs principales */
    :root {
        /* Nouvelle palette de couleurs plus profonde */
        --primary-violet: #9a71f1; /* Violet riche et vibrant */
        --light-violet: rgb(188, 160, 240); /* Violet secondaire moins clair */
        --dark-violet: #a984f3ef; /* Violet foncé intense */
        --darker-violet: #5a438b6c; /* Pour accents sombres */
        
        /* Gamme de gris révisée */
        --light-gray: #f8f9fa; /* Gris très clair légèrement bleuté */
        --medium-gray: #e9ecef; /* Gris moyen neutre */
        --dark-gray: #6c757d; /* Gris foncé moderne */
        --darker-gray: #495057; /* Pour textes */
        
        /* Couleurs de texte */
        --text-dark: #212529; /* Noir doux pour texte */
        --text-light: #f8f9fa; /* Texte clair */
        
        /* Accents */
        --accent-color: #8a63d2; /* Violet accentuel */
        --accent-light: #e2d9f3; /* Violet très clair pour fonds */
    }

    /* Exemple d'application sur un élément clé */
    .btn-primary {
        background-color: var(--primary-violet);
        border-color: var(--dark-violet);
        color: white;
    }

    .btn-primary:hover {
        background-color: var(--dark-violet);
        border-color: var(--darker-violet);
    }

    .card {
        border: 1px solid var(--medium-gray);
        background-color: white;
    }

    .card-header {
        background-color: var(--primary-violet);
        color: white;
    }

    /* Styles généraux */
    body {
        background-color: var(--light-gray);
    }

    /* Styles spécifiques à la page Quotations */
    .quotation-container {
        animation: fadeIn 0.5s ease-out;
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(126, 87, 194, 0.1);
        padding: 2rem;
        margin-bottom: 2rem;
        border: 1px solid var(--medium-gray);
    }

    .quotation-header {
        border-bottom: 1px solid var(--medium-gray);
        padding-bottom: 1.5rem;
        margin-bottom: 2rem;
    }

    .quotation-title {
        color: var(--dark-gray);
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .quotation-info-card {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(126, 87, 194, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid var(--medium-gray);
    }

    .quotation-info-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(126, 87, 194, 0.15);
    }

    .info-label {
        color: var(--dark-gray);
        font-size: 0.85rem;
        font-weight: 500;
        margin-bottom: 0.25rem;
    }

    .info-value {
        color: var(--text-dark);
        font-weight: 600;
        font-size: 1.1rem;
    }

    .status-badge {
        padding: 0.35rem 0.75rem;
        border-radius: 50px;
        font-size: 0.8rem;
        font-weight: 600;
        letter-spacing: 0.5px;
    }

    .items-table-container {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 15px rgba(126, 87, 194, 0.1);
        border: 1px solid var(--medium-gray);
    }

    .items-table {
        margin-bottom: 0;
    }

    .items-table thead th {
        background-color: var(--primary-violet);
        color: white;
        border: none;
        padding: 1rem;
        font-weight: 500;
        text-transform: uppercase;
        font-size: 0.8rem;
        letter-spacing: 0.5px;
    }

    .items-table tbody tr {
        transition: background-color 0.2s ease;
    }

    .items-table tbody tr:nth-child(even) {
        background-color: var(--light-gray);
    }

    .items-table tbody tr:hover {
        background-color: var(--light-violet);
        color: white;
    }

    .items-table tbody td {
        vertical-align: middle;
        padding: 1rem;
        border-color: var(--medium-gray);
    }

    .price-input-group {
        max-width: 150px;
    }

    .price-input {
        border-right: none;
        font-weight: 500;
        border-color: var(--medium-gray);
    }

    .price-input:focus {
        border-color: var(--primary-violet);
        box-shadow: 0 0 0 0.2rem rgba(126, 87, 194, 0.25);
    }

    .input-group-text {
        background-color: white;
        border-left: none;
        color: var(--primary-violet);
        border-color: var(--medium-gray);
    }

    .update-btn {
        border-radius: 50px;
        padding: 0.35rem 0.75rem;
        transition: all 0.3s ease;
        border: 1px solid var(--primary-violet);
        color: var(--primary-violet);
        background-color: transparent;
    }

    .update-btn:hover {
        background-color: var(--primary-violet);
        color: white;
    }

    /* Pagination */
    .pagination .page-item.active .page-link {
        background-color: var(--primary-violet);
        border-color: var(--primary-violet);
    }

    .pagination .page-link {
        color: var(--primary-violet);
        border-color: var(--medium-gray);
    }

    .pagination .page-link:hover {
        color: var(--dark-violet);
        background-color: var(--light-gray);
    }

    .sticky-header {
        position: sticky;
        top: 0;
        z-index: 10;
    }

    .back-btn {
        border-radius: 50px;
        padding: 0.5rem 1.25rem;
        transition: all 0.3s ease;
        border: 1px solid var(--medium-gray);
        color: var(--dark-gray);
        background-color: white;
    }

    .back-btn:hover {
        background-color: var(--light-violet);
        color: white;
        border-color: var(--light-violet);
    }

    .total-amount {
        font-size: 1.25rem;
        color: var(--primary-violet);
        font-weight: 600;
    }

    /* Cartes et en-têtes */
    .card-header.bg-primary {
        background-color: var(--primary-violet) !important;
        color: white;
    }

    .btn-primary {
        background-color: var(--primary-violet);
        border-color: var(--primary-violet);
    }

    .btn-primary:hover {
        background-color: var(--dark-violet);
        border-color: var(--dark-violet);
    }

    /* Badges status */
    .badge-success {
        background-color: var(--primary-violet);
    }

    .badge-warning {
        background-color: var(--light-violet);
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .quotation-container {
            padding: 1rem;
        }
        
        .items-table thead {
            display: none;
        }
        
        .items-table tbody tr {
            display: block;
            margin-bottom: 1rem;
            border: 1px solid var(--medium-gray);
            border-radius: 8px;
        }
        
        .items-table tbody td {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: none;
            padding: 0.75rem 1rem;
        }
        
        .items-table tbody td::before {
            content: attr(data-label);
            font-weight: 600;
            color: var(--primary-violet);
            margin-right: 1rem;
            font-size: 0.85rem;
        }
        
        .price-input-group {
            max-width: 100%;
        }
    }

    /* Animations */
    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    @@keyframes fadeInRow {
        from { opacity: 0; transform: translateX(10px); }
        to { opacity: 1; transform: translateX(0); }
    }

    .animate-in {
        animation: fadeIn 0.5s ease-out;
    }

    .items-table tbody tr {
        animation: fadeInRow 0.4s ease forwards;
    }
</style>

<div class="container mt-4 animate-in">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="quotation-title">@ViewData["Title"]</h2>
        <div>
            @* <a href="@Url.Action("RefreshCache", new { supplierId = ViewBag.SupplierId, returnUrl = Context.Request.Path })" 
            class="btn btn-info refresh-cache-btn mr-2"
            title="Rafraîchir les données depuis la source">
                <i class="fas fa-sync-alt"></i> Rafraîchir
            </a> *@
            <a href="@Url.Action("Index")" class="btn btn-secondary back-btn">
                <i class="fas fa-arrow-left"></i> Retour aux fournisseurs
            </a>
        </div>
    </div>

    <!-- Card with Quotation Header Info -->
    <div class="card shadow mb-4 quotation-info-card">
        <div class="card-header bg-primary text-white py-3 d-flex justify-content-between">
            <h5 class="m-0 font-weight-bold">
                <i class="fas fa-file-invoice"></i> Devis @Model.Name
            </h5>
            <div>
                <span class="badge @(Model.Status == "Submitted" ? "badge-success" : "badge-warning") status-badge">
                    @Model.Status
                </span>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="font-weight-bold info-label">Fournisseur:</label>
                        <p class="form-control-plaintext info-value">@Model.SupplierName</p>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="font-weight-bold info-label">Date:</label>
                        <p class="form-control-plaintext info-value">@Model.TransactionDate</p>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="font-weight-bold info-label">Montant total:</label>
                        <p class="form-control-plaintext font-weight-bold text-success total-amount">
                            @Model.Total.ToString("C") <!-- Correction ici -->
                        </p>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="font-weight-bold info-label">Articles:</label>
                        <p class="form-control-plaintext info-value">@Model.Items.Count</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Carte d'en-tête du devis -->
    <div class="card shadow mb-4">
        <div class="card-header bg-primary text-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="m-0">
                        <i class="fas fa-file-invoice"></i> Devis @Model.Name
                        <span class="badge @(Model.Status == "Submitted" ? "badge-success" : "badge-warning") ml-2">
                            @Model.Status
                        </span>
                    </h5>
                    <div class="mt-2">
                        <span class="mr-3"><i class="fas fa-user-tie mr-1"></i> @Model.SupplierName</span>
                        <span><i class="fas fa-calendar-day mr-1"></i> @Model.TransactionDate</span>
                    </div>
                </div>
                <div class="text-right">
                    <div class="h5 mb-0 font-weight-bold text-white">Total: @Model.Total.ToString("C")</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tableau des articles -->
    <div class="card shadow">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0">
                    <thead class="thead-dark">
                        <tr>
                            <th>Code</th>
                            <th>Désignation</th>
                            <th>Unité</th>
                            <th>Quantité</th>
                            <th>Prix Unitaire (€)</th>
                            <th>Montant (€)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>@item.ItemCode</td>
                                <td>@item.ItemName</td>
                                <td>@item.UnitOfMeasure</td>
                                <td>@item.Quantity.ToString("N2")</td>
                                <td>@item.Rate.ToString("N2")</td>
                                <td>@((item.Rate * item.Quantity).ToString("N2"))</td>
                                <td>
                                    @if (Model.Status == "Draft")
                                    {
                                        <a asp-action="EditItemPrice" 
                                        asp-controller="Suppliers"
                                        asp-route-supplierName="@Model.SupplierName"
                                        asp-route-quotationName="@Model.Name"
                                        asp-route-itemCode="@item.ItemCode"
                                        asp-route-currentPrice="@item.Rate"
                                        asp-route-quantity="@item.Quantity"
                                        asp-route-itemName="@item.ItemName"
                                        asp-route-unitOfMeasure="@item.UnitOfMeasure"
                                        class="btn btn-sm btn-primary">
                                            <i class="fas fa-edit"></i> Modifier
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Pagination classique -->
    <nav aria-label="Page navigation" class="my-4">
        <ul class="pagination justify-content-center">
            <!-- Bouton Précédent -->
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("GetSupplierQuotations", new { supplierId, page = currentPage - 1 })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            @{
                // Nombre maximum de pages à afficher dans la pagination
                int maxPagesToShow = 5;
                int startPage = Math.Max(1, currentPage - (maxPagesToShow / 2));
                int endPage = Math.Min(totalPages, startPage + maxPagesToShow - 1);
                
                // Ajuster si nous sommes près de la fin
                if (endPage - startPage < maxPagesToShow - 1)
                {
                    startPage = Math.Max(1, endPage - maxPagesToShow + 1);
                }

                // Afficher le premier numéro avec "..." si nécessaire
                if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("GetSupplierQuotations", new { supplierId, page = 1 })">1</a>
                    </li>
                    if (startPage > 2)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                }

                // Afficher les numéros de page
                for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("GetSupplierQuotations", new { supplierId, page = i })">@i</a>
                    </li>
                }

                // Afficher le dernier numéro avec "..." si nécessaire
                if (endPage < totalPages)
                {
                    if (endPage < totalPages - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("GetSupplierQuotations", new { supplierId, page = totalPages })">@totalPages</a>
                    </li>
                }
            }

            <!-- Bouton Suivant -->
            <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("GetSupplierQuotations", new { supplierId, page = currentPage + 1 })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
