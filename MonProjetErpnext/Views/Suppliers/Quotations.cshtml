@model List<MonProjetErpnext.Models.Suppliers.SupplierQuotation>
@{
    ViewData["Title"] = "Détails du Devis Fournisseur";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    string supplierId = ViewBag.SupplierId;
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-12 d-flex justify-content-between align-items-center">
            <h2><i class="fas fa-file-invoice-dollar"></i> @ViewData["Title"]</h2>
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left"></i> Retour à la liste
            </a>
        </div>
    </div>

    <!-- Carte principale du devis -->
    @foreach (var quotation in Model)
    {
        <div class="card shadow quotation-card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center bg-white">
                <div>
                    <h3 class="m-0 text-primary">Devis @quotation.Name</h3>
                    <small class="text-muted">Fournisseur: @quotation.SupplierName</small>
                </div>
                <span class="badge @GetStatusBadgeClass(quotation.Status)">
                    @quotation.Status
                </span>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3 mb-3">
                        <span class="info-label"><i class="fas fa-calendar-day"></i> Date:</span>
                        <p class="info-value">@quotation.TransactionDate</p>
                    </div>
                    <div class="col-md-3 mb-3">
                        <span class="info-label"><i class="fas fa-money-bill-wave"></i> Total:</span>
                        <p class="info-value">@quotation.Total.ToString("C")</p>
                    </div>
                    <div class="col-md-3 mb-3">
                        <span class="info-label"><i class="fas fa-coins"></i> Devise:</span>
                        <p class="info-value">@quotation.Currency</p>
                    </div>
                    <div class="col-md-3 mb-3">
                        <span class="info-label"><i class="fas fa-boxes"></i> Articles:</span>
                        <p class="info-value">@quotation.Items.Count</p>
                    </div>
                </div>

                <h4 class="mb-3"><i class="fas fa-boxes"></i> Articles</h4>
                <div class="table-responsive scrollable-table">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Désignation</th>
                                <th>Quantité</th>
                                <th>Prix Unitaire</th>
                                <th>Montant</th>
                                @if (quotation.Status == "Draft")
                                {
                                    <th>Action</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in quotation.Items)
                            {
                                <tr>
                                    <td>@item.ItemCode</td>
                                    <td>@item.Name</td>
                                    <td>@item.Quantity</td>
                                    <td>
                                        @if (quotation.Status == "Draft")
                                        {
                                            <input type="number"
                                                step="0.0001"
                                                class="form-control rate-input"
                                                name="newRate"
                                                data-item-name="@item.Name"
                                                data-quantity="@item.Quantity"
                                                value="@item.Rate.ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                        }
                                        else
                                        {
                                            @item.Rate.ToString("C")
                                        }
                                    </td>
                                    <td>@((item.Quantity * item.Rate).ToString("C"))</td>
                                    @if (quotation.Status == "Draft")
                                    {
                                        <td>
                                            <button type="button" class="btn btn-sm btn-success update-btn">
                                                <i class="fas fa-save"></i> Mettre à jour
                                            </button>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-footer bg-light">
                @if (quotation.Status == "Draft")
                {
                    <button class="btn btn-primary validate-btn" 
                            data-invoice-name="@quotation.Name"
                            data-invoice-supplier="@quotation.SupplierName">
                        <i class="fas fa-check-circle"></i> Valider
                    </button>
                }
            </div>
        </div>
    }


        <!-- Pagination -->
    <div class="row mt-4 pagination-container">
        <div class="col-md-12">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("GetSupplierQuotations", new { supplierId, page = currentPage - 1 })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("GetSupplierQuotations", new { supplierId, page = i })">@i</a>
                        </li>
                    }

                    <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("GetSupplierQuotations", new { supplierId, page = currentPage + 1 })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>


</div>
@section Scripts {
<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".validate-btn").forEach(button => {
            button.addEventListener("click", async function () {
                const invoiceName = this.dataset.invoiceName;
                const supplierId = this.dataset.invoiceSupplier; // Renommé de Suppliers à supplierId

                if (!invoiceName || !supplierId) {
                    alert("Nom de devis ou fournisseur manquant");
                    return;
                }

                const confirmation = confirm(`Voulez-vous vraiment valider le devis : ${invoiceName} ?`);
                if (!confirmation) return;

                try {
                    const response = await fetch('/Suppliers/ValidateInvoice', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                        },
                        body: `invoiceName=${encodeURIComponent(invoiceName)}&supplierId=${encodeURIComponent(supplierId)}`
                    });

                    if (response.redirected) {
                        window.location.href = response.url;
                    } else {
                        const html = await response.text();
                        document.body.innerHTML = html;
                    }
                } catch (error) {
                    console.error("Erreur lors de la validation :", error);
                    alert("Erreur lors de la validation du devis.");
                }
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".update-btn").forEach(function (button) {
            button.addEventListener("click", function () {
                const row = button.closest("tr");
                const input = row.querySelector(".rate-input");

                const newRate = parseFloat(input.value);
                const itemName = input.dataset.itemName;
                const quantity = parseFloat(input.dataset.quantity);

                if (!itemName || isNaN(newRate) || isNaN(quantity)) {
                    alert("Données invalides.");
                    return;
                }

                fetch('/Suppliers/UpdateQuotationItemRate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({
                        nameItem: itemName,
                        newRate: newRate,
                        quantity: quantity
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Prix mis à jour avec succès !");
                        // Optionnel : Rafraîchir la page ou recalculer le montant
                        location.reload();
                    } else {
                        alert("Erreur : " + data.message);
                    }
                })
                .catch(error => {
                    console.error('Erreur AJAX :', error);
                    alert("Une erreur s'est produite.");
                });
            });
        });
    });
</script>

}


@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Draft" => "badge-secondary",
            "Submitted" => "badge-primary",
            "Accepted" => "badge-success",
            "Rejected" => "badge-danger",
            "Expired" => "badge-warning",
            _ => "badge-info"
        };
    }
}

<style>
    /* Styles communs aux commandes et factures */
    :root {
        --primary-color: #6c5ce7;
        --primary-light: #a29bfe;
        --light-bg: #f8f9fa;
        --border-color: #e0e0e0;
        --hover-color: #f1f1f1;
        --text-color: #333;
        --shadow-color: rgba(108, 92, 231, 0.1);
    }

    /* Conteneur principal avec bordure violette */
    .quotation-card {
        background-color: var(--light-bg);
        border-radius: 8px;
        box-shadow: 0 4px 20px var(--shadow-color);
        padding: 2rem;
        margin-bottom: 2rem;
        border-left: 4px solid var(--primary-color);
        border-right: 1px solid var(--border-color);
        border-top: 1px solid var(--border-color);
        border-bottom: 1px solid var(--border-color);
        animation: fadeIn 0.4s ease forwards;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

.card-footer.bg-light {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 1.25rem; /* Espacement légèrement augmenté */
    padding: 1.25rem 1.75rem; /* Padding augmenté */
    border-top: 1px solid var(--border-color);
    background-color: #f8f9fa !important;
}

/* Style pour le badge "Déjà validé" - Version agrandie */
.card-footer .badge {
    padding: 0.5em 0.8em; /* Augmentation du padding */
    font-size: 0.85em; /* Taille de police légèrement augmentée */
    font-weight: 600;
    letter-spacing: 0.5px;
    border-radius: 5px; /* Bordure plus arrondie */
    text-transform: uppercase;
    min-width: 120px; /* Largeur minimale pour un meilleur équilibre */
    text-align: center;
}

/* Style pour le bouton Valider - Version agrandie */
.card-footer .validate-btn {
    padding: 0.65rem 1.5rem; /* Padding augmenté */
    font-size: 0.95rem; /* Taille de police augmentée */
    font-weight: 500;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    border: none;
    border-radius: 5px; /* Bordure plus arrondie */
    background: linear-gradient(to right, var(--primary-color), #7b6ce6);
    color: white;
    box-shadow: 0 3px 6px rgba(108, 92, 231, 0.3); /* Ombre plus prononcée */
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.65rem; /* Espacement icône/texte augmenté */
    min-width: 140px; /* Largeur minimale */
    justify-content: center;
}

.card-footer .validate-btn:hover {
    background: linear-gradient(to right, #5e4dd9, #6c5ce7);
    transform: translateY(-2px);
    box-shadow: 0 5px 10px rgba(108, 92, 231, 0.4); /* Ombre hover plus visible */
}

.card-footer .validate-btn:active {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(108, 92, 231, 0.3);
}

.card-footer .validate-btn i {
    font-size: 1em; /* Taille d'icône légèrement augmentée */
}


    .quotation-card:hover {
        box-shadow: 0 6px 25px rgba(108, 92, 231, 0.15);
        transform: translateY(-3px);
    }

    .quotation-card {
    transition: all 0.3s ease;
    }

    .quotation-card:hover {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }

    /* Effet de surbrillance sur la bordure gauche */
    .quotation-card::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 4px;
        background: linear-gradient(to bottom, var(--primary-color), var(--primary-light));
        z-index: 2;
    }

    .card-header {
        border-bottom: 1px solid var(--border-color);
        padding-bottom: 1rem;
        margin-bottom: 1.5rem;
        position: relative;
    }


    .text-primary {
        color: #6c5ce7 !important;
    }

    .info-label {
        font-weight: 600;
        color: #555;
        display: block;
    }

    .info-value {
        color: #333;
        font-size: 0.95rem;
    }

    .items-table-container {
        border: 1px solid #eee;
        border-radius: 8px;
        padding: 15px;
        background: white;
    }

    .scrollable-table {
        max-height: 400px;
        overflow-y: auto;
    }

    .table thead th {
        position: sticky;
        top: 0;
        background: linear-gradient(to right, var(--primary-color), #7b6ce6);
        color: white;
        z-index: 1;
        border-bottom: none;
        font-weight: 500;
        letter-spacing: 0.5px;
        text-transform: uppercase;
        font-size: 0.75rem;
        padding: 12px 15px;
    }

    .badge {
        padding: 0.5em 0.75em;
        font-size: 0.85em;
        font-weight: 600;
    }

    .badge-secondary {
        background-color: #6c757d;
        color: white;
    }

    .badge-primary {
        background-color: #6c5ce7;
        color: white;
    }

    .badge-success {
        background-color: #28a745;
        color: white;
    }

    .badge-danger {
        background-color: #dc3545;
        color: white;
    }

    .badge-warning {
        background-color: #ffc107;
        color: #212529;
    }

    .badge-info {
        background-color: #17a2b8;
        color: white;
    }

    .page-item.active .page-link {
        background-color: #6c5ce7;
        border-color: #6c5ce7;
    }

    .page-link {
        color: #6c5ce7;
    }

    @@media (max-width: 768px) {
        .info-label, .info-value {
            font-size: 0.9rem;
        }
        
        .table-responsive {
            display: block;
            width: 100%;
            overflow-x: auto;
        }
    }
</style>