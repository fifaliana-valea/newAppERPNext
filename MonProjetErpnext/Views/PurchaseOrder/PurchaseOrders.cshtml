@model List<MonProjetErpnext.Models.PurchaseOrder.PurchaseOrder>
@{
    ViewData["Title"] = "Commandes d'Achat";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    string supplierFilter = ViewBag.SupplierFilter;
    string statusFilter = ViewBag.StatusFilter;
}

<style>
    .order-container {
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(108, 92, 231, 0.1);
        padding: 2rem;
        margin-bottom: 2rem;
        border: 1px solid #dfe6e9;
    }

    .order-header {
        border-bottom: 1px solid #dfe6e9;
        padding-bottom: 1rem;
        margin-bottom: 1.5rem;
    }

    .order-title {
        color: #6c5ce7;
        font-weight: 600;
    }

    .status-badge {
        padding: 0.35rem 0.75rem;
        border-radius: 50px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .badge-draft { background-color: #6c757d; color: white; }
    .badge-to-receive { background-color: #fd7e14; color: white; }
    .badge-completed { background-color: #28a745; color: white; }
    .badge-cancelled { background-color: #dc3545; color: white; }

    .items-table-container {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 15px rgba(108, 92, 231, 0.1);
        margin-top: 1rem;
    }

    .scrollable-table {
        max-height: 400px;
        overflow-y: auto;
        display: block;
    }

    .items-table thead th {
        position: sticky;
        top: 0;
        background-color: #6c5ce7;
        color: white;
        z-index: 1;
    }

    .info-label {
        font-weight: 600;
        color: #495057;
    }

    .info-value {
        color: #212529;
    }

    .pagination-container {
        margin-top: 2rem;
        margin-bottom: 2rem;
    }

    .page-item.active .page-link {
        background-color: #6c5ce7;
        border-color: #6c5ce7;
    }

    .page-link {
        color: #6c5ce7;
    }

    .filter-form {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

    @@media (max-width: 768px) {
        .scrollable-table {
            max-height: 300px;
        }
        
        .items-table td {
            font-size: 0.9rem;
            padding: 0.5rem;
        }
    }
</style>

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <h2><i class="fas fa-file-invoice-dollar"></i> @ViewData["Title"]</h2>
        </div>
    </div>

    <!-- Filtres -->
    <div class="row">
        <div class="col-md-12 filter-form">
            <form method="get" class="form-inline">
                <div class="form-group mr-3">
                    <label for="status" class="mr-2">Statut:</label>
                    <select id="status" name="status" class="form-control">
                        <option value="">Tous</option>
                        <option value="Draft" selected="@(statusFilter == "Draft")">Brouillon</option>
                        <option value="To Receive" selected="@(statusFilter == "To Receive")">À recevoir</option>
                        <option value="Completed" selected="@(statusFilter == "Completed")">Complété</option>
                        <option value="Cancelled" selected="@(statusFilter == "Cancelled")">Annulé</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary mr-2">
                    <i class="fas fa-filter"></i> Filtrer
                </button>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-sync-alt"></i> Réinitialiser
                </a>
            </form>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i> Aucune commande trouvée.
        </div>
    }
    else
    {
        foreach (var order in Model)
        {
            <div class="order-container">
                <div class="order-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="order-title">Commande @order.Name</h3>
                        <span class="status-badge @GetStatusBadgeClass(order.Status)">
                            @order.Status
                        </span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="mb-3">
                            <span class="info-label">Fournisseur:</span>
                            <p class="info-value">@order.SupplierName</p>
                        </div>
                        <div class="mb-3">
                            <span class="info-label">Date:</span>
                            <p class="info-value">@order.TransactionDate</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <span class="info-label">Total:</span>
                            <p class="info-value">@order.Total.ToString("C")</p>
                        </div>
                        <div class="mb-3">
                            <span class="info-label">Total général:</span>
                            <p class="info-value">@order.GrandTotal.ToString("C")</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <span class="info-label">Devise:</span>
                            <p class="info-value">@order.Currency</p>
                        </div>
                        <div class="mb-3">
                            <span class="info-label">Société:</span>
                            <p class="info-value">@order.Company</p>
                        </div>
                    </div>
                </div>

                <div class="items-table-container">
                    <h4 class="mt-4 mb-3"><i class="fas fa-boxes"></i> Articles</h4>
                    <div class="table-responsive scrollable-table">
                        <table class="table table-striped table-hover items-table">
                            <thead>
                                <tr>
                                    <th>Code</th>
                                    <th>Désignation</th>
                                    <th>Quantité</th>
                                    <th>Prix Unitaire</th>
                                    <th>Montant</th>
                                    <th>Entrepôt</th>
                                    <th>Livraison prévue</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in order.Items)
                                {
                                    <tr>
                                        <td>@item.ItemCode</td>
                                        <td>@item.ItemName</td>
                                        <td>@item.Quantity.ToString("N2") @item.UnitOfMeasure</td>
                                        <td>@item.Rate.ToString("C")</td>
                                        <td>@item.Amount.ToString("C")</td>
                                        <td>@item.Warehouse</td>
                                        <td>@item.ExpectedDeliveryDate</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }

        <!-- Pagination -->
        <div class="row pagination-container">
            <div class="col-md-12">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" 
                               href="@Url.Action("PurchaseOrders", new { page = currentPage - 1, supplier = supplierFilter, status = statusFilter })" 
                               aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>

                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" 
                                   href="@Url.Action("PurchaseOrders", new { page = i, supplier = supplierFilter, status = statusFilter })">
                                    @i
                                </a>
                            </li>
                        }

                        <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                            <a class="page-link" 
                               href="@Url.Action("PurchaseOrders", new { page = currentPage + 1, supplier = supplierFilter, status = statusFilter })" 
                               aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    }
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Draft" => "badge-draft",
            "To Receive" => "badge-to-receive",
            "Completed" => "badge-completed",
            "Cancelled" => "badge-cancelled",
            _ => "badge-draft"
        };
    }
}