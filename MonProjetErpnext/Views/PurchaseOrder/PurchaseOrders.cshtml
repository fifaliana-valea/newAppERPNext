@model List<MonProjetErpnext.Models.PurchaseOrder.PurchaseOrder>
@{
    ViewData["Title"] = "Commandes d'Achat";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    string supplierFilter = ViewBag.SupplierFilter;
    string statusFilter = ViewBag.StatusFilter;
}
<style>
/* Styles communs aux commandes et factures */
:root {
    --primary-color: #6c5ce7;
    --primary-light: #a29bfe;
    --light-bg: #f8f9fa;
    --border-color: #e0e0e0;
    --hover-color: #f1f1f1;
    --text-color: #333;
    --shadow-color: rgba(108, 92, 231, 0.1);
}

/* Conteneur principal avec bordure violette */
.order-container {
    background-color: var(--light-bg);
    border-radius: 8px;
    box-shadow: 0 4px 20px var(--shadow-color);
    padding: 2rem;
    margin-bottom: 2rem;
    border-left: 4px solid var(--primary-color);
    border-right: 1px solid var(--border-color);
    border-top: 1px solid var(--border-color);
    border-bottom: 1px solid var(--border-color);
    animation: fadeIn 0.4s ease forwards;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.order-container:hover {
    box-shadow: 0 6px 25px rgba(108, 92, 231, 0.15);
    transform: translateY(-3px);
}

/* Effet de surbrillance sur la bordure gauche */
.order-container::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 4px;
    background: linear-gradient(to bottom, var(--primary-color), var(--primary-light));
    z-index: 2;
}

.order-header {
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 1rem;
    margin-bottom: 1.5rem;
    position: relative;
}

.order-title {
    color: var(--primary-color);
    font-weight: 600;
    position: relative;
    padding-left: 15px;
}

.order-title::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 8px;
    height: 8px;
    background-color: var(--primary-color);
    border-radius: 50%;
}

/* Badges de statut améliorés */
.status-badge {
    padding: 0.4rem 0.9rem;
    border-radius: 50px;
    font-size: 0.8rem;
    font-weight: 600;
    text-transform: capitalize;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
}

.badge-draft {
    background-color: #6c757d;
    color: white;
}

.badge-to-receive {
    background-color: #17a2b8;
    color: white;
}

.badge-completed {
    background: linear-gradient(135deg, #28a745, #5cb85c);
    color: white;
}

.badge-cancelled {
    background: linear-gradient(135deg, #dc3545, #c82333);
    color: white;
}

/* Tableaux d'articles améliorés */
.items-table-container {
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 15px var(--shadow-color);
    margin-top: 1.5rem;
    border: 1px solid var(--border-color);
    background-color: white;
}

.scrollable-table {
    max-height: 300px;
    overflow-y: auto;
    display: block;
}

.table {
    margin-bottom: 0;
}

.table thead th {
    position: sticky;
    top: 0;
    background: linear-gradient(to right, var(--primary-color), #7b6ce6);
    color: white;
    z-index: 1;
    border-bottom: none;
    font-weight: 500;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    font-size: 0.75rem;
    padding: 12px 15px;
}

.table tbody tr {
    transition: all 0.2s ease;
}

.table tbody tr:hover {
    background-color: #f8f5ff;
    transform: scale(1.005);
}

.table tbody td {
    padding: 12px 15px;
    vertical-align: middle;
    border-top: 1px solid #f1f1f1;
}

/* Informations avec icônes */
.info-label {
    font-weight: 600;
    color: var(--text-color);
    display: block;
    margin-bottom: 0.25rem;
    position: relative;
    padding-left: 25px;
}

.info-label i {
    position: absolute;
    left: 0;
    top: 2px;
    color: var(--primary-color);
    font-size: 1rem;
}

.info-value {
    color: var(--text-color);
    margin-bottom: 0;
    padding-left: 25px;
    font-size: 0.95rem;
}

/* Pagination améliorée */
.pagination-container {
    margin-top: 3rem;
    margin-bottom: 2rem;
}

.page-item.active .page-link {
    background: linear-gradient(to right, var(--primary-color), #7b6ce6);
    border-color: var(--primary-color);
    color: white;
    box-shadow: 0 2px 5px var(--shadow-color);
}

.page-link {
    color: var(--primary-color);
    border: 1px solid var(--border-color);
    margin: 0 5px;
    border-radius: 6px !important;
    transition: all 0.3s ease;
    min-width: 40px;
    text-align: center;
    padding: 0.5rem 0.75rem;
}

.page-link:hover {
    color: white;
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px var(--shadow-color);
}

/* Filtres améliorés */
.filter-form {
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 25px;
    border: 1px solid var(--border-color);
    box-shadow: 0 3px 10px var(--shadow-color);
}

.form-control {
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
}

.form-control:focus {
    border-color: var(--primary-light);
    box-shadow: 0 0 0 0.2rem rgba(108, 92, 231, 0.25);
}

/* Animations */
@@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Responsive */
@@media (max-width: 768px) {
    .order-container {
        padding: 1.5rem;
    }
    
    .info-label, .info-value {
        font-size: 0.9rem;
    }
    
    .order-title {
        font-size: 1.25rem;
    }
    
    .table thead {
        display: none;
    }
    
    .table, .table tbody, .table tr, .table td {
        display: block;
        width: 100%;
    }
    
    .table tr {
        margin-bottom: 15px;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        overflow: hidden;
    }
    
    .table td {
        text-align: right;
        padding-left: 50%;
        position: relative;
        border-top: 1px solid #f1f1f1;
    }
    
    .table td::before {
        content: attr(data-label);
        position: absolute;
        left: 15px;
        width: calc(50% - 15px);
        padding-right: 15px;
        text-align: left;
        font-weight: 600;
        color: var(--primary-color);
    }
}
</style>

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <h2><i class="fas fa-file-invoice-dollar"></i> @ViewData["Title"]</h2>
        </div>
    </div>

    <!-- Filtres -->
    <div class="row">
        <div class="col-md-12 filter-form">
            <form method="get" class="form-inline">
                <div class="form-group mr-3">
                    <label for="status" class="mr-2">Statut:</label>
                    <select id="status" name="status" class="form-control">
                        <option value="">Tous</option>
                        <option value="Draft" selected="@(statusFilter == "Draft")">Brouillon</option>
                        <option value="To Receive" selected="@(statusFilter == "To Receive")">À recevoir</option>
                        <option value="Completed" selected="@(statusFilter == "Completed")">Complété</option>
                        <option value="Cancelled" selected="@(statusFilter == "Cancelled")">Annulé</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary mr-2">
                    <i class="fas fa-filter"></i> Filtrer
                </button>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-sync-alt"></i> Réinitialiser
                </a>
            </form>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i> Aucune commande trouvée.
        </div>
    }
    else
    {
        foreach (var order in Model)
        {
            <div class="order-container">
                <div class="order-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="order-title">Commande @order.Name</h3>
                        <span class="status-badge @GetStatusBadgeClass(order.Status)">
                            @order.Status
                        </span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="mb-3">
                            <span class="info-label">Fournisseur:</span>
                            <p class="info-value">@order.SupplierName</p>
                        </div>
                        <div class="mb-3">
                            <span class="info-label">Date:</span>
                            <p class="info-value">@order.TransactionDate</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <span class="info-label">Total:</span>
                            <p class="info-value">@order.Total.ToString("C")</p>
                        </div>
                        <div class="mb-3">
                            <span class="info-label">Total général:</span>
                            <p class="info-value">@order.GrandTotal.ToString("C")</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <span class="info-label">Devise:</span>
                            <p class="info-value">@order.Currency</p>
                        </div>
                        <div class="mb-3">
                            <span class="info-label">Société:</span>
                            <p class="info-value">@order.Company</p>
                        </div>
                    </div>
                </div>

                <div class="items-table-container">
                    <h4 class="mt-4 mb-3"><i class="fas fa-boxes"></i> Articles</h4>
                    <div class="table-responsive scrollable-table">
                        <table class="table table-striped table-hover items-table">
                            <thead>
                                <tr>
                                    <th>Code</th>
                                    <th>Désignation</th>
                                    <th>Quantité</th>
                                    <th>Prix Unitaire</th>
                                    <th>Montant</th>
                                    <th>Entrepôt</th>
                                    <th>Livraison prévue</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in order.Items)
                                {
                                    <tr>
                                        <td>@item.ItemCode</td>
                                        <td>@item.ItemName</td>
                                        <td>@item.Quantity.ToString("N2") @item.UnitOfMeasure</td>
                                        <td>@item.Rate.ToString("C")</td>
                                        <td>@item.Amount.ToString("C")</td>
                                        <td>@item.Warehouse</td>
                                        <td>@item.ExpectedDeliveryDate</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }

        <!-- Pagination -->
        <div class="row pagination-container">
            <div class="col-md-12">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" 
                               href="@Url.Action("PurchaseOrders", new { page = currentPage - 1, supplier = supplierFilter, status = statusFilter })" 
                               aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>

                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" 
                                   href="@Url.Action("PurchaseOrders", new { page = i, supplier = supplierFilter, status = statusFilter })">
                                    @i
                                </a>
                            </li>
                        }

                        <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                            <a class="page-link" 
                               href="@Url.Action("PurchaseOrders", new { page = currentPage + 1, supplier = supplierFilter, status = statusFilter })" 
                               aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    }
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Draft" => "badge-draft",
            "To Receive" => "badge-to-receive",
            "Completed" => "badge-completed",
            "Cancelled" => "badge-cancelled",
            _ => "badge-draft"
        };
    }
}